{"ast":null,"code":"import Enum from \"../../Enumeradores\";\n\nconst _enum = new Enum();\n\nconst initialState = {\n  countries: null,\n  countriesNAME_ID: null,\n  co\n};\n\nfunction reducerRoot(state = initialState, action) {\n  switch (action.type) {\n    // Aca va tu codigo;\n    //________________________________________________________GET\n    case _enum.GET_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n    //__________________________________________________________CLEAR\n\n    case _enum.CLEAR:\n      return { ...state,\n        countriesNAME_ID: action.payload\n      };\n    //______________________________________________GET ID\n\n    case _enum.GET_COUNTRY_ID:\n      return { ...state,\n        countriesNAME_ID: action.payload\n      };\n    //____________________________________________________GET NAME\n\n    case _enum.GET_COUNTRY_NAME:\n      return { ...state,\n        countriesNAME_ID: action.payload\n      };\n    //_______________________________________________________ORDER ASC\n\n    case _enum.ORDER:\n      const {\n        payload\n      } = action;\n\n      if (payload[0] === \"9\") {\n        //__________________________________________ordena por abecedario\n        var aux1 = [];\n        var aux2 = [];\n\n        for (let i = 0; i < state.countries.length; i++) {\n          if (state.countries[i].name[0] === payload[1]) {\n            aux1.push(state.countries[i]);\n          } else {\n            aux2.push(state.countries[i]);\n          }\n        }\n\n        return { ...state,\n          countries: [...aux1, ...aux2]\n        };\n      } else {\n        //_________________________________________________________________orden por select\n        var aux;\n        var array = state.countries.map(e => e);\n\n        for (var i = 0; i < array.length - 1; i++) {\n          for (var j = i + 1; j < array.length; j++) {\n            if (action.payload === \"asc\") {\n              if (array[i].name > array[j].name) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n\n            if (action.payload === \"des\") {\n              if (array[i].name < array[j].name) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n\n            if (action.payload === \"cont\") {\n              if (array[i].continent > array[j].continent) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n\n            if (action.payload === \"area\") {\n              if (array[i].area > array[j].area) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n\n            if (action.payload === \"act\") {\n              if (array[i].ActTurs.length < array[j].ActTurs.length) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n\n            if (action.payload === \"pob\") {\n              if (array[i].poblation < array[j].poblation) {\n                aux = array[j];\n                array[j] = array[i];\n                array[i] = aux;\n              }\n            }\n          }\n        } //case\n\n\n        return { ...state,\n          countries: array\n        };\n      }\n\n    //_____________________________________________________________________\n\n    default:\n      return state;\n  }\n}\n\nexport default reducerRoot;","map":{"version":3,"sources":["C:/Users/ROY/Desktop/proyect invidivual countries/PI-countries/PI-Countries-main/client/src/f_redux/f_reducer/reducer.js"],"names":["Enum","_enum","initialState","countries","countriesNAME_ID","co","reducerRoot","state","action","type","GET_COUNTRIES","payload","CLEAR","GET_COUNTRY_ID","GET_COUNTRY_NAME","ORDER","aux1","aux2","i","length","name","push","aux","array","map","e","j","continent","area","ActTurs","poblation"],"mappings":"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","sourcesContent":["import Enum from \"../../Enumeradores\";\r\n\r\nconst _enum = new Enum();\r\n\r\nconst initialState = {\r\n  countries: null,\r\n  countriesNAME_ID: null,\r\n  co\r\n};\r\n\r\nfunction reducerRoot(state = initialState, action) {\r\n  switch (action.type) {\r\n    // Aca va tu codigo;\r\n    //________________________________________________________GET\r\n    case _enum.GET_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n    //__________________________________________________________CLEAR\r\n    case _enum.CLEAR:\r\n      return {\r\n        ...state,\r\n        countriesNAME_ID: action.payload,\r\n      };\r\n    //______________________________________________GET ID\r\n    case _enum.GET_COUNTRY_ID:\r\n      return {\r\n        ...state,\r\n        countriesNAME_ID: action.payload,\r\n      };\r\n\r\n    //____________________________________________________GET NAME\r\n    case _enum.GET_COUNTRY_NAME:\r\n      return {\r\n        ...state,\r\n        countriesNAME_ID: action.payload,\r\n      };\r\n    //_______________________________________________________ORDER ASC\r\n    case _enum.ORDER:\r\n      const { payload } = action;\r\n      if (payload[0] === \"9\") {\r\n        //__________________________________________ordena por abecedario\r\n        var aux1 = [];\r\n        var aux2 = [];\r\n        for (let i = 0; i < state.countries.length; i++) {\r\n          if (state.countries[i].name[0] === payload[1]) {\r\n            aux1.push(state.countries[i]);\r\n          } else {\r\n            aux2.push(state.countries[i]);\r\n          }\r\n        }\r\n        return { ...state, countries: [...aux1, ...aux2] };\r\n      } else {\r\n        //_________________________________________________________________orden por select\r\n        var aux;\r\n        var array = state.countries.map((e) => e);\r\n\r\n        for (var i = 0; i < array.length - 1; i++) {\r\n          for (var j = i + 1; j < array.length; j++) {\r\n            if (action.payload === \"asc\") {\r\n              if (array[i].name > array[j].name) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n            if (action.payload === \"des\") {\r\n              if (array[i].name < array[j].name) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n            if (action.payload === \"cont\") {\r\n              if (array[i].continent > array[j].continent) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n            if (action.payload === \"area\") {\r\n              if (array[i].area > array[j].area) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n            if (action.payload === \"act\") {\r\n              if (array[i].ActTurs.length < array[j].ActTurs.length) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n            if (action.payload === \"pob\") {\r\n              if (array[i].poblation < array[j].poblation) {\r\n                aux = array[j];\r\n                array[j] = array[i];\r\n                array[i] = aux;\r\n              }\r\n            }\r\n          }\r\n        } //case\r\n\r\n        return { ...state, countries: array };\r\n      }\r\n    //_____________________________________________________________________\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducerRoot;\r\n"]},"metadata":{},"sourceType":"module"}